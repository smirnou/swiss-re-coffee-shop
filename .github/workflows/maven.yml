# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-and-package:
    runs-on: ubuntu-latest

    steps:
      # Checks out your repository under $GITHUB_WORKSPACE so the job can access it
      - uses: actions/checkout@v4

      # Sets up a Java development environment with a specific JDK version
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # Run tests and verify code coverage before packaging
      - name: Test and verify coverage
        run: mvn -B verify --file pom.xml

      - name: Generate JaCoCo coverage report
        run: mvn jacoco:report

      - name: Deploy JaCoCo Report to GitHub Pages
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git fetch
          git checkout -B gh-pages
          mkdir -p coverage
          cp -r target/site/jacoco/. coverage/
          git add coverage
          git commit -m "Update JaCoCo Coverage Report" -a || echo "No changes to commit"
          git push -u origin gh-pages --force

      # If tests and coverage checks pass, package the application without running tests again
      - name: Package application
        run: mvn -B package --file pom.xml -DskipTests

      # Uploads the generated JAR file to GitHub Actions artifacts
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: swiss-re-coffee-shop
          path: target/*.jar  # Adjust according to your project output
