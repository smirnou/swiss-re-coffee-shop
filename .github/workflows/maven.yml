# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-and-package:
    runs-on: ubuntu-latest

    steps:
      # Checks out your repository under $GITHUB_WORKSPACE so the job can access it
      - uses: actions/checkout@v4

      # Sets up a Java development environment with a specific JDK version
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # Run tests to validate the build
      - name: Run tests
        run: mvn -B test --file pom.xml

      # Packages the application and produces a JAR
      - name: Package application
        run: mvn -B package --file pom.xml
        # Ensuring the package phase does not run tests again
        env:
          MAVEN_OPTS: "-Dmaven.test.skip=true"

      # Uploads the generated JAR file to GitHub Actions artifacts
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Application-JAR
          path: target/*.jar  # Adjust according to your project output

      # Optional: Update dependency graph
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
